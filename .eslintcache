[{"/Users/javisanchez/Projects/Web_development/thebeginning/src/index.js":"1","/Users/javisanchez/Projects/Web_development/thebeginning/src/App.js":"2","/Users/javisanchez/Projects/Web_development/thebeginning/src/reportWebVitals.js":"3","/Users/javisanchez/Projects/Web_development/thebeginning/src/redux/reducers.js":"4","/Users/javisanchez/Projects/Web_development/thebeginning/src/redux/actions.js":"5","/Users/javisanchez/Projects/Web_development/thebeginning/src/components/PatientInput.js":"6","/Users/javisanchez/Projects/Web_development/thebeginning/src/components/Clock.js":"7","/Users/javisanchez/Projects/Web_development/thebeginning/src/helpers/timeHelpers.js":"8","/Users/javisanchez/Projects/Web_development/thebeginning/src/components/List/List.js":"9"},{"size":967,"mtime":1610271322126,"results":"10","hashOfConfig":"11"},{"size":908,"mtime":1610299531668,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1279,"mtime":1610284222318,"results":"14","hashOfConfig":"11"},{"size":166,"mtime":1610226242777,"results":"15","hashOfConfig":"11"},{"size":1814,"mtime":1610298603021,"results":"16","hashOfConfig":"11"},{"size":407,"mtime":1610283967732,"results":"17","hashOfConfig":"11"},{"size":199,"mtime":1610286024686,"results":"18","hashOfConfig":"11"},{"size":766,"mtime":1610299597788,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1opn44d",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/javisanchez/Projects/Web_development/thebeginning/src/index.js",[],["42","43"],"/Users/javisanchez/Projects/Web_development/thebeginning/src/App.js",["44"],"import logo from './logo.svg';\nimport './App.css';\n\nimport { connect } from 'react-redux'\nimport { INCREMENT, DECREMENT } from './redux/actions'\n\nimport PatientInput from './components/PatientInput'\nimport List from './components/List/List'\nimport Clock from './components/Clock'\nimport avatarImg from './assets/avatar.png'\n\nfunction App(props) {\n\n  return (\n    <div className=\"App\">\n      {console.log(props)}\n      <h1>Optihealth</h1>\n      <img className=\"avatar\" src={avatarImg} alt=\"avatar\"/>\n      <Clock/>\n      <PatientInput/>\n      <div>\n        <List/>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n      ...state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIncrementCounter: () => dispatch({type: INCREMENT}),\n    onDecrementCounter: () => dispatch({type: DECREMENT})\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","/Users/javisanchez/Projects/Web_development/thebeginning/src/reportWebVitals.js",[],"/Users/javisanchez/Projects/Web_development/thebeginning/src/redux/reducers.js",[],"/Users/javisanchez/Projects/Web_development/thebeginning/src/redux/actions.js",[],"/Users/javisanchez/Projects/Web_development/thebeginning/src/components/PatientInput.js",["45"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { ADD_PATIENT, REMOVE_PATIENT } from '../redux/actions'\n\nimport { getNow, getCurrentTime } from '../helpers/timeHelpers.js'\n\nimport '../App.css'\n\nexport class PatientInput extends Component {\n    state = {\n        patientName: \"\",\n        id: 0\n    }\n\n    patientNameChangedHandler = (event)=> {\n        this.setState({patientName: event.target.value})\n    }\n\n    getRandomId = () => {\n        return Math.floor(1000 + Math.random() * 9000);\n    }\n\n    render() {\n        return (\n            <div>\n                <input placeholder=\"Your name\"\n                       type=\"text\"\n                       onChange={this.patientNameChangedHandler}\n                       value={this.state.name}\n                       />\n                <p>{this.state.patientName}</p>\n                <p>{console.log(this.props.state)}</p>\n                <button onClick={() => this.props.onCreatePatient(this.state.patientName, getCurrentTime(), this.getRandomId())}>\n                    Add Patient\n                </button>\n                <button disabled={this.props.queueReducer.queue.length === 0} onClick={() => {\n                    this.props.onDeletePatient(this.props.queueReducer.queue[0]?.id)\n                }}>\n                    Delete first Patient\n                </button>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ...state\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onCreatePatient: (name, time, id) => dispatch({type: ADD_PATIENT, newPatient: {name, rgstrTime: time, id}}),\n        onDeletePatient: (patientId) => dispatch({type: REMOVE_PATIENT, patientId})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PatientInput);\n","/Users/javisanchez/Projects/Web_development/thebeginning/src/components/Clock.js",["46"],"import React from 'react' \nimport { useState } from 'react'\n\nexport default function Clock() {\n    let time = new Date().toLocaleTimeString()\n\n    const [Ctime, setTime] = useState(time);\n    const updateTime = () => {\n        time = new Date().toLocaleTimeString()\n        setTime(time);\n    }\n    setInterval(updateTime, 100);\n    return (\n        <div>\n            <h3>{time}</h3>\n        </div>\n    )\n}\n","/Users/javisanchez/Projects/Web_development/thebeginning/src/helpers/timeHelpers.js",[],"/Users/javisanchez/Projects/Web_development/thebeginning/src/components/List/List.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"51","severity":1,"message":"55","line":5,"column":10,"nodeType":"53","messageId":"54","endLine":5,"endColumn":16},{"ruleId":"51","severity":1,"message":"56","line":7,"column":12,"nodeType":"53","messageId":"54","endLine":7,"endColumn":17},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'getNow' is defined but never used.","'Ctime' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]